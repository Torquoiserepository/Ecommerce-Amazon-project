<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="DESKTOP-MIBOA5U" failures="0" tests="11" name="testlayer.YourAddress" time="79.712" errors="1" timestamp="2022-06-21T01:13:35 EDT" skipped="7">
  <testcase classname="testlayer.YourAddress" name="initiateelement" time="34.593">
    <error message="Unable to find element with locator By.xpath: //a[@id=&#039;nav-link-accountList&#039;]
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: &#039;4.1.3&#039;, revision: &#039;7b1ebf28ef&#039;
System info: host: &#039;DESKTOP-MIBOA5U&#039;, ip: &#039;192.168.12.9&#039;, os.name: &#039;Windows 11&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;18&#039;
Driver info: driver.version: RemoteWebDriver" type="org.openqa.selenium.NoSuchElementException">
      <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to find element with locator By.xpath: //a[@id='nav-link-accountList']
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.1.3', revision: '7b1ebf28ef'
System info: host: 'DESKTOP-MIBOA5U', ip: '192.168.12.9', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18'
Driver info: driver.version: RemoteWebDriver
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:385)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:377)
at basepackage.BaseclassAmazon.login(BaseclassAmazon.java:61)
at testlayer.YourAddress.initiateelement(YourAddress.java:22)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:65)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:381)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:319)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:803)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:589)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- initiateelement -->
  <system-out/>
  <testcase classname="testlayer.YourAddress" name="verifyaddress" time="17.788"/>
  <system-out/>
  <testcase classname="testlayer.YourAddress" name="verifyaadress" time="18.430"/>
  <system-out/>
  <testcase classname="testlayer.YourAddress" name="verifycountry" time="8.901"/>
  <system-out/>
  <testcase classname="testlayer.YourAddress" name="verifyprovince" time="0.000">
    <skipped/>
  </testcase> <!-- verifyprovince -->
  <system-out/>
  <testcase classname="testlayer.YourAddress" name="address" time="0.000">
    <skipped/>
  </testcase> <!-- address -->
  <system-out/>
  <testcase classname="testlayer.YourAddress" name="address" time="0.000">
    <skipped/>
  </testcase> <!-- address -->
  <system-out/>
  <testcase classname="testlayer.YourAddress" name="address" time="0.000">
    <skipped/>
  </testcase> <!-- address -->
  <system-out/>
  <testcase classname="testlayer.YourAddress" name="address" time="0.000">
    <skipped/>
  </testcase> <!-- address -->
  <system-out/>
  <testcase classname="testlayer.YourAddress" name="address" time="0.000">
    <skipped/>
  </testcase> <!-- address -->
  <system-out/>
  <testcase classname="testlayer.YourAddress" name="address" time="0.000">
    <skipped/>
  </testcase> <!-- address -->
  <system-out/>
</testsuite> <!-- testlayer.YourAddress -->
